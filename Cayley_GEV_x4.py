import numpy as np
import scipy
from numpy.linalg import inv
from scipy.linalg import eig, svd
import operator as op
from functools import reduce
import re




def ncr(n, r):
    r = min(r, n-r)
    numer = reduce(op.mul, range(n, n-r, -1), 1)
    denom = reduce(op.mul, range(1, r+1), 1)
    return numer // denom
### Constant Parameters ###
n = 3  # n-variate polynomials
DD = 7  # macaulay degree
d = 3 # polysistem degree
crk = 27  # corank of macaulay matrix at degree d


# Calculate Macualay matrix dimensions & number of monomials
pd, qd = n , ncr(n + d, d)
pD, qD = n * ncr(n + DD - d, DD - d), ncr(n + DD, DD)  # dimensions of Macualay matrix
qp = ncr(n + DD - 1, DD - 1)  # number of monomials up to order d-1
qD_d = ncr(n + DD - d, DD - d)


l1 = [1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42,
          43, 44, 45, 46, 47, 48, 49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
          76, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
          108, 109, 110, 111]
l2 = [2, 5, 7, 8, 11, 13, 14, 16, 17, 18, 21, 23, 24, 26, 27, 28, 30, 31, 32, 33, 36, 38, 39, 41, 42, 43, 45, 46,
          47, 48, 50, 51, 52, 53, 54, 57, 59, 60, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81,
          82, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113,
          114, 115, 116, 117, 118]
l3 = [3, 6, 8, 9, 12, 14, 15, 17, 18, 19, 22, 24, 25, 27, 28, 29, 31, 32, 33, 34, 37, 39, 40, 42, 43, 44, 46, 47,
          48, 49, 51, 52, 53, 54, 55, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82,
          83, 86, 88, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114,
          115, 116, 117, 118, 119]

ls= [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
    [1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
    [1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
    [1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
    [2, 5, 7, 8, 11, 13, 14, 16, 17, 18, 21, 23, 24, 26, 27, 28, 30, 31, 32, 33],
    [2, 5, 7, 8, 11, 13, 14, 16, 17, 18, 21, 23, 24, 26, 27, 28, 30, 31, 32, 33],
    [2, 5, 7, 8, 11, 13, 14, 16, 17, 18, 21, 23, 24, 26, 27, 28, 30, 31, 32, 33],
    [3, 6, 8, 9, 12, 14, 15, 17, 18, 19, 22, 24, 25, 27, 28, 29, 31, 32, 33, 34],
    [3, 6, 8, 9, 12, 14, 15, 17, 18, 19, 22, 24, 25, 27, 28, 29, 31, 32, 33, 34],
    [3, 6, 8, 9, 12, 14, 15, 17, 18, 19, 22, 24, 25, 27, 28, 29, 31, 32, 33, 34],
    [4, 10, 11, 12, 20, 21, 22, 23, 24, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44],
    [4, 10, 11, 12, 20, 21, 22, 23, 24, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44],
    [4, 10, 11, 12, 20, 21, 22, 23, 24, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44],
    [5, 11, 13, 14, 21, 23, 24, 26, 27, 28, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48],
    [5, 11, 13, 14, 21, 23, 24, 26, 27, 28, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48],
    [5, 11, 13, 14, 21, 23, 24, 26, 27, 28, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48],
    [6, 12, 14, 15, 22, 24, 25, 27, 28, 29, 37, 39, 40, 42, 43, 44, 46, 47, 48, 49],
    [6, 12, 14, 15, 22, 24, 25, 27, 28, 29, 37, 39, 40, 42, 43, 44, 46, 47, 48, 49],
    [6, 12, 14, 15, 22, 24, 25, 27, 28, 29, 37, 39, 40, 42, 43, 44, 46, 47, 48, 49],
    [7, 13, 16, 17, 23, 26, 27, 30, 31, 32, 38, 41, 42, 45, 46, 47, 50, 51, 52, 53],
    [7, 13, 16, 17, 23, 26, 27, 30, 31, 32, 38, 41, 42, 45, 46, 47, 50, 51, 52, 53],
    [7, 13, 16, 17, 23, 26, 27, 30, 31, 32, 38, 41, 42, 45, 46, 47, 50, 51, 52, 53],
    [8, 14, 17, 18, 24, 27, 28, 31, 32, 33, 39, 42, 43, 46, 47, 48, 51, 52, 53, 54],
    [8, 14, 17, 18, 24, 27, 28, 31, 32, 33, 39, 42, 43, 46, 47, 48, 51, 52, 53, 54],
    [8, 14, 17, 18, 24, 27, 28, 31, 32, 33, 39, 42, 43, 46, 47, 48, 51, 52, 53, 54],
    [9, 15, 18, 19, 25, 28, 29, 32, 33, 34, 40, 43, 44, 47, 48, 49, 52, 53, 54, 55],
    [9, 15, 18, 19, 25, 28, 29, 32, 33, 34, 40, 43, 44, 47, 48, 49, 52, 53, 54, 55],
    [9, 15, 18, 19, 25, 28, 29, 32, 33, 34, 40, 43, 44, 47, 48, 49, 52, 53, 54, 55],
    [10, 20, 21, 22, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65],
    [10, 20, 21, 22, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65],
    [10, 20, 21, 22, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65],
    [11, 21, 23, 24, 36, 38, 39, 41, 42, 43, 57, 59, 60, 62, 63, 64, 66, 67, 68, 69],
    [11, 21, 23, 24, 36, 38, 39, 41, 42, 43, 57, 59, 60, 62, 63, 64, 66, 67, 68, 69],
    [11, 21, 23, 24, 36, 38, 39, 41, 42, 43, 57, 59, 60, 62, 63, 64, 66, 67, 68, 69],
    [12, 22, 24, 25, 37, 39, 40, 42, 43, 44, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70],
    [12, 22, 24, 25, 37, 39, 40, 42, 43, 44, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70],
    [12, 22, 24, 25, 37, 39, 40, 42, 43, 44, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70],
    [13, 23, 26, 27, 38, 41, 42, 45, 46, 47, 59, 62, 63, 66, 67, 68, 71, 72, 73, 74],
    [13, 23, 26, 27, 38, 41, 42, 45, 46, 47, 59, 62, 63, 66, 67, 68, 71, 72, 73, 74],
    [13, 23, 26, 27, 38, 41, 42, 45, 46, 47, 59, 62, 63, 66, 67, 68, 71, 72, 73, 74],
    [14, 24, 27, 28, 39, 42, 43, 46, 47, 48, 60, 63, 64, 67, 68, 69, 72, 73, 74, 75],
    [14, 24, 27, 28, 39, 42, 43, 46, 47, 48, 60, 63, 64, 67, 68, 69, 72, 73, 74, 75],
    [14, 24, 27, 28, 39, 42, 43, 46, 47, 48, 60, 63, 64, 67, 68, 69, 72, 73, 74, 75],
    [15, 25, 28, 29, 40, 43, 44, 47, 48, 49, 61, 64, 65, 68, 69, 70, 73, 74, 75, 76],
    [15, 25, 28, 29, 40, 43, 44, 47, 48, 49, 61, 64, 65, 68, 69, 70, 73, 74, 75, 76],
    [15, 25, 28, 29, 40, 43, 44, 47, 48, 49, 61, 64, 65, 68, 69, 70, 73, 74, 75, 76],
    [16, 26, 30, 31, 41, 45, 46, 50, 51, 52, 62, 66, 67, 71, 72, 73, 77, 78, 79, 80],
    [16, 26, 30, 31, 41, 45, 46, 50, 51, 52, 62, 66, 67, 71, 72, 73, 77, 78, 79, 80],
    [16, 26, 30, 31, 41, 45, 46, 50, 51, 52, 62, 66, 67, 71, 72, 73, 77, 78, 79, 80],
    [17, 27, 31, 32, 42, 46, 47, 51, 52, 53, 63, 67, 68, 72, 73, 74, 78, 79, 80, 81],
    [17, 27, 31, 32, 42, 46, 47, 51, 52, 53, 63, 67, 68, 72, 73, 74, 78, 79, 80, 81],
    [17, 27, 31, 32, 42, 46, 47, 51, 52, 53, 63, 67, 68, 72, 73, 74, 78, 79, 80, 81],
    [18, 28, 32, 33, 43, 47, 48, 52, 53, 54, 64, 68, 69, 73, 74, 75, 79, 80, 81, 82],
    [18, 28, 32, 33, 43, 47, 48, 52, 53, 54, 64, 68, 69, 73, 74, 75, 79, 80, 81, 82],
    [18, 28, 32, 33, 43, 47, 48, 52, 53, 54, 64, 68, 69, 73, 74, 75, 79, 80, 81, 82],
    [19, 29, 33, 34, 44, 48, 49, 53, 54, 55, 65, 69, 70, 74, 75, 76, 80, 81, 82, 83],
    [19, 29, 33, 34, 44, 48, 49, 53, 54, 55, 65, 69, 70, 74, 75, 76, 80, 81, 82, 83],
    [19, 29, 33, 34, 44, 48, 49, 53, 54, 55, 65, 69, 70, 74, 75, 76, 80, 81, 82, 83],
    [20, 35, 36, 37, 56, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93],
    [20, 35, 36, 37, 56, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93],
    [20, 35, 36, 37, 56, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93],
    [21, 36, 38, 39, 57, 59, 60, 62, 63, 64, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97],
    [21, 36, 38, 39, 57, 59, 60, 62, 63, 64, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97],
    [21, 36, 38, 39, 57, 59, 60, 62, 63, 64, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97],
    [22, 37, 39, 40, 58, 60, 61, 63, 64, 65, 86, 88, 89, 91, 92, 93, 95, 96, 97, 98],
    [22, 37, 39, 40, 58, 60, 61, 63, 64, 65, 86, 88, 89, 91, 92, 93, 95, 96, 97, 98],
    [22, 37, 39, 40, 58, 60, 61, 63, 64, 65, 86, 88, 89, 91, 92, 93, 95, 96, 97, 98],
    [23, 38, 41, 42, 59, 62, 63, 66, 67, 68, 87, 90, 91, 94, 95, 96, 99, 100, 101, 102],
    [23, 38, 41, 42, 59, 62, 63, 66, 67, 68, 87, 90, 91, 94, 95, 96, 99, 100, 101, 102],
    [23, 38, 41, 42, 59, 62, 63, 66, 67, 68, 87, 90, 91, 94, 95, 96, 99, 100, 101, 102],
    [24, 39, 42, 43, 60, 63, 64, 67, 68, 69, 88, 91, 92, 95, 96, 97, 100, 101, 102, 103],
    [24, 39, 42, 43, 60, 63, 64, 67, 68, 69, 88, 91, 92, 95, 96, 97, 100, 101, 102, 103],
    [24, 39, 42, 43, 60, 63, 64, 67, 68, 69, 88, 91, 92, 95, 96, 97, 100, 101, 102, 103],
    [25, 40, 43, 44, 61, 64, 65, 68, 69, 70, 89, 92, 93, 96, 97, 98, 101, 102, 103, 104],
    [25, 40, 43, 44, 61, 64, 65, 68, 69, 70, 89, 92, 93, 96, 97, 98, 101, 102, 103, 104],
    [25, 40, 43, 44, 61, 64, 65, 68, 69, 70, 89, 92, 93, 96, 97, 98, 101, 102, 103, 104],
    [26, 41, 45, 46, 62, 66, 67, 71, 72, 73, 90, 94, 95, 99, 100, 101, 105, 106, 107, 108],
    [26, 41, 45, 46, 62, 66, 67, 71, 72, 73, 90, 94, 95, 99, 100, 101, 105, 106, 107, 108],
    [26, 41, 45, 46, 62, 66, 67, 71, 72, 73, 90, 94, 95, 99, 100, 101, 105, 106, 107, 108],
    [27, 42, 46, 47, 63, 67, 68, 72, 73, 74, 91, 95, 96, 100, 101, 102, 106, 107, 108, 109],
    [27, 42, 46, 47, 63, 67, 68, 72, 73, 74, 91, 95, 96, 100, 101, 102, 106, 107, 108, 109],
    [27, 42, 46, 47, 63, 67, 68, 72, 73, 74, 91, 95, 96, 100, 101, 102, 106, 107, 108, 109],
    [28, 43, 47, 48, 64, 68, 69, 73, 74, 75, 92, 96, 97, 101, 102, 103, 107, 108, 109, 110],
    [28, 43, 47, 48, 64, 68, 69, 73, 74, 75, 92, 96, 97, 101, 102, 103, 107, 108, 109, 110],
    [28, 43, 47, 48, 64, 68, 69, 73, 74, 75, 92, 96, 97, 101, 102, 103, 107, 108, 109, 110],
    [29, 44, 48, 49, 65, 69, 70, 74, 75, 76, 93, 97, 98, 102, 103, 104, 108, 109, 110, 111],
    [29, 44, 48, 49, 65, 69, 70, 74, 75, 76, 93, 97, 98, 102, 103, 104, 108, 109, 110, 111],
    [29, 44, 48, 49, 65, 69, 70, 74, 75, 76, 93, 97, 98, 102, 103, 104, 108, 109, 110, 111],
    [30, 45, 50, 51, 66, 71, 72, 77, 78, 79, 94, 99, 100, 105, 106, 107, 112, 113, 114, 115],
    [30, 45, 50, 51, 66, 71, 72, 77, 78, 79, 94, 99, 100, 105, 106, 107, 112, 113, 114, 115],
    [30, 45, 50, 51, 66, 71, 72, 77, 78, 79, 94, 99, 100, 105, 106, 107, 112, 113, 114, 115],
    [31, 46, 51, 52, 67, 72, 73, 78, 79, 80, 95, 100, 101, 106, 107, 108, 113, 114, 115, 116],
    [31, 46, 51, 52, 67, 72, 73, 78, 79, 80, 95, 100, 101, 106, 107, 108, 113, 114, 115, 116],
    [31, 46, 51, 52, 67, 72, 73, 78, 79, 80, 95, 100, 101, 106, 107, 108, 113, 114, 115, 116],
    [32, 47, 52, 53, 68, 73, 74, 79, 80, 81, 96, 101, 102, 107, 108, 109, 114, 115, 116, 117],
    [32, 47, 52, 53, 68, 73, 74, 79, 80, 81, 96, 101, 102, 107, 108, 109, 114, 115, 116, 117],
    [32, 47, 52, 53, 68, 73, 74, 79, 80, 81, 96, 101, 102, 107, 108, 109, 114, 115, 116, 117],
    [33, 48, 53, 54, 69, 74, 75, 80, 81, 82, 97, 102, 103, 108, 109, 110, 115, 116, 117, 118],
    [33, 48, 53, 54, 69, 74, 75, 80, 81, 82, 97, 102, 103, 108, 109, 110, 115, 116, 117, 118],
    [33, 48, 53, 54, 69, 74, 75, 80, 81, 82, 97, 102, 103, 108, 109, 110, 115, 116, 117, 118],
    [34, 49, 54, 55, 70, 75, 76, 81, 82, 83, 98, 103, 104, 109, 110, 111, 116, 117, 118, 119],
    [34, 49, 54, 55, 70, 75, 76, 81, 82, 83, 98, 103, 104, 109, 110, 111, 116, 117, 118, 119],
    [34, 49, 54, 55, 70, 75, 76, 81, 82, 83, 98, 103, 104, 109, 110, 111, 116, 117, 118, 119]]
ls0=np.arange(qD_d*pd).reshape(-1,1)

ps_mat=np.array([[0.0,0.0,0.0,0.0,0.0,2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,-2.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,-2.0,0.0],
[4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0],
[0.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,4.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,4.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,-4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,6.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,6.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,6.0,0.0],
[0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,-8.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,-8.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,-8.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0],
[0.0,4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,-8.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,-8.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,-4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,-2.0,0.0,2.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,-2.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,2.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,-2.0,0.0,2.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,2.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,-2.0,0.0],
[4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0],
[0.0,6.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,-6.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0],
[-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0],
[0.0,0.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,-4.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,-4.0,0.0],
[-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0],
[0.0,-2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0],
[0.0,-2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,-2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0],
[0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0],
[0.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,4.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0],
[-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0],
[0.0,0.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0],
[0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,-4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,-4.0,0.0,4.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,-8.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,4.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,0.0],
[0.0,-4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,-8.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,-4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,-4.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0],
[0.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,-2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0],
[-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0],
[0.0,0.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,-2.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,-2.0,0.0],
[0.0,-6.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,6.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0],
[0.0,-2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,-2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0],
[4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0],
[0.0,0.0,0.0,0.0,0.0,-6.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,6.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,-6.0,0.0],
[4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0],
[0.0,0.0,0.0,0.0,0.0,-2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,-2.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0],
[0.0,2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,4.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,-4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0],
[-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0],
[0.0,2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,-2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,-4.0,0.0,4.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,4.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,8.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0],
[0.0,-2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,-4.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,-8.0,0.0,-8.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,8.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,8.0,0.0,-8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0],
[0.0,-6.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,-6.0,0.0,-6.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,-2.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,-2.0,0.0],
[-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0],
[0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,-2.0,0.0,0.0],
[0.0,-4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,-4.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,4.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,6.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,-2.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,-2.0,0.0],
[4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0],
[0.0,0.0,0.0,0.0,0.0,-6.0,0.0,-6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,-6.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,-6.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,6.0,0.0],
[4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,-4.0,0.0,0.0,0.0,4.0]])



Rs=np.array([[[1,0,0],[0,0,-1],[0,1,0]],[[0,0,1],[0,1,0],[-1,0,0]],[[0,-1,0],[1,0,0],[0,0,1]],np.eye(3)])
Z33=np.zeros((3, 3))
RRs = [np.array([np.array([rot, Z33, Z33]).reshape((9,3)).T,np.array([Z33, rot,Z33]).reshape((9,3)).T,np.array([Z33,Z33,rot]).reshape((9,3)).T]).reshape((9,9)) for rot in Rs]

def pnp_4(points, lines):

  (M, M0,M1,M2,T,T0,T1,T2) = build_M_T_4(points,lines)

  (rot, trans, cost) = pnp0(M, T)
  (rot0, trans0, cost0) = pnp0(M0, T0)
  (rot1, trans1, cost1) = pnp0(M1, T1)
  (rot2, trans2, cost2) = pnp0(M2, T2)

  costs = [cost0, cost1, cost2,cost]
  rots = [rot0, rot1, rot2, rot]
  transs = [trans0, trans1, trans2, trans]

  costM = 1e20
  rotM = []
  transM = []
  for i in range(4):
      if costs[i] < costM:
          costM = costs[i]
          rotM = rots[i].dot(Rs[i].T)
          transM = transs[i]

  return (rotM, transM)





def pnp0(M,T):
  ###   This part does not depend on N  ###
  m = polysystem(M)          ###   Get Macaulay matrix   ###
  u, s, vh = scipy.linalg.svd(m)
  (A, A0, B) = shift_matrix(vh)    ### shift matrix ###
  l, V = scipy.linalg.eig(B.dot(A.T), A0.dot(A.T))  ### Genaralized Eigenvalue Problem ###
  (rot, trans,cost)=sol0(M, T, A , V) ###   extract solution  ###

  return (rot,trans,cost)





def C(point):
    x, y, z = point
    return np.array([[x, y, z, 0, 0, 0, 0, 0, 0],
                     [0, 0, 0, x, y, z, 0, 0, 0],
                     [0, 0, 0, 0, 0, 0, x, y, z]])

def build_M_T(real_points, lines):
    n = len(lines)
    Q = []
    padded_points = []
    Q_sum = np.zeros([3, 3])
    temp_sum = np.zeros([3, 9])
    for i in range(n):
        line = lines[i]
        point = real_points[i]
        padded_points.append(C(point))
        v = np.outer(line, line) / np.inner(line, line)
        q = (v - np.eye(3)).T.dot(v - np.eye(3))
        Q.append(q)
        Q_sum = Q_sum + q
        temp_sum = temp_sum + q.dot(padded_points[i])
    inverse = inv(Q_sum / n) / n
    T = -inverse.dot(temp_sum)
    M = np.zeros([9, 9])
    for i in range(n):
        current = padded_points[i] + T
        M = M + current.T.dot(Q[i]).dot(current)
    # M = symmetrize(M)
    return (M, T)





def build_M_T_4(points, lines):

    (M, T) = build_M_T(points, lines)
    M0, T0 = RRs[0].dot(M).dot(RRs[0].T), T.dot(RRs[0].T)
    M1, T1 = RRs[1].dot(M).dot(RRs[1].T), T.dot(RRs[1].T)
    M2, T2 = RRs[2].dot(M).dot(RRs[2].T), T.dot(RRs[2].T)

    return (M, M0, M1, M2, T, T0, T1, T2)



def polysystem(M):
    ps = ps_mat.dot(M.reshape(-1,1)).reshape(pd,qd)
    ps1=np.tile(ps, (qD_d, 1))
    m = np.zeros((pD, qD))
    m[ls0, ls] = ps1
    return m

def shift_matrix(vh):
    A = vh[-crk:]
    A0 = np.concatenate((A[:, :qp], np.zeros((crk, qD - qp))), axis=1)
    [s1, s2, s3] = list(np.random.normal(0, 1, n))  # Generate random shift function. shift = s1*ss1 + s2*ss2 + s3*ss3
    B = np.zeros((crk, qD))
    B[:,l1]  += s1*A[:,:qp]
    B[:, l2] += s2 * A[:, :qp]
    B[:, l3] += s3 * A[:, :qp]
    return (A, A0, B)

def sol0(M , T, A, V):
    sols = [((v.reshape(1,-1)).dot(A[:, 1:n + 1])) / ((v.reshape(1,-1)).dot(A[:, [0]])) for v in V.T if abs(v[0].imag)< 1e-10]
    CbarVecs = [cayley2rotbar(s[0,0],s[0,1],s[0,2]).reshape(-1, 1) for s in sols]
    cost = [np.dot(np.dot(CbarVec.T, M), CbarVec) for CbarVec in CbarVecs]

    indM = np.argmin(cost)

    solM=sols[indM]
    CbarM = CbarVecs[indM].reshape(3, 3)
    rot = np.real((np.real((1 / (1 + np.inner(solM,solM)))) * np.real(CbarM)))
    trans = -T.dot(rot.reshape(9, 1))

    return (rot, trans,cost[indM])




def cayley2rotbar(s1, s2, s3):
    return np.array([[1 + s1 ** 2 - s2 ** 2 - s3 ** 2, 2 * s3 + 2 * s1 * s2,  -2 * s2 + 2 * s1 * s3],
                     [-2 * s3 + 2 * s1 * s2 , 1 - s1 ** 2 + s2 ** 2 - s3 ** 2,2 * s1 + 2 * s2 * s3],
                     [2 * s2 + 2 * s1 * s3,  -2 * s1 + 2 * s2 * s3 , 1 - s1 ** 2 - s2 ** 2 + s3 ** 2]])

def print_output(R_out, t_out):
    print("\nPNP output : \n")
    print("R: ", R_out)
    print("t: ", t_out)

def read_points_lines(input_file_name_lines, input_file_name_points):
    # Input: points(Nx3) & lines(Nx3). lines are unit vectors.
    if input_file_name_lines[-3:]=='txt':
        lines = np.array([[float((row.split())[i]) for i in range(3)] for row in list((open(input_file_name_lines)))])
        points = np.array([[float((row.split())[i]) for i in range(3)] for row in list((open(input_file_name_points)))])
    if input_file_name_lines[-3:] == 'csv':
        lines = np.array([[float((re.split(',| \n', row))[i]) for i in range(3)] for row in list((open(input_file_name_lines)))])
        points = np.array([[float((re.split(',| \n', row))[i]) for i in range(3)] for row in list((open(input_file_name_points)))])
    lines = np.array([l / np.linalg.norm(l) for l in lines])
    return (points, lines)

def calccost(lines,points,R,t):
    # calculates the average projection error of the pnp problem. Error of Rot ant trans given points(pattern) and lines(all lines)
    #sumcost= sum((1/n)||(R*p-t)'*(I-vv')||^2)
    sumcost = 0
    for i in range(len(points)):
        I=np.identity(3)
        line = lines[i, :].reshape(3, 1)
        vvt = np.matmul(line, line.T)
        Rpminust = np.matmul(R, points[i, :]).reshape(3, 1) - t
        cos = np.linalg.norm(np.matmul(Rpminust.T, (I - vvt)))
        sumcost += (cos**2) /len(points)
    return sumcost



if __name__ == '__main__':
    input_file_name_lines = 'lines5.txt'
    input_file_name_points = 'points5.txt'

    (points, lines) = read_points_lines(input_file_name_lines, input_file_name_points)
    (rot, trans) = pnp_4(points, lines)

    print_output(rot, trans)
    print('Cost :', calccost(lines, points, rot, trans))






